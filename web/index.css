@import "@xyflow/react/dist/style.css";
@import "@fontsource/gasoek-one";
@import "@fontsource/dm-mono";
@import "@fontsource/dm-sans";
@import "@radix-ui/themes/styles.css";
@import "/web/brand-theme.css";

html,
body,
#root {
    height: 100%;
    margin: 0;
    font-size: 1rem;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.wrapper-div {
    width: max-content;
    height: max-content;
    padding: 0;
    margin: 0;
    border: 0;

    &:focus {
        border: none;
        outline: none;
    }
}

.node-context-menu-content {
    --accent-contrast: var(--category-contrast);
    --accent-9: var(--category-color);
}

.edge-context-menu-content {
    --accent-9: var(--type-color);
}

.react-flow {
    --xy-selection-background-color-default: var(--accent-a1);
    --xy-selection-border-default: 2px dotted var(--accent-9);
}

.react-flow__node,
.react-flow__node.selected {
    background-color: transparent !important;
    border: none;
    box-shadow: none !important;
    outline: none;
}

.dark {
    --xy-controls-button-background-color: var(--gray-2);
    --xy-controls-button-color: var(--gray-11);
    --xy-background-color: var(--gray-1);
}

.react-flow__panel {
    border-radius: var(--radius-2);
    border-width: 2px;
    overflow: hidden;
}

.react-flow__panel {
    background: var(--color-panel);
}

path.react-flow__edge-path {
    stroke: rgba(0, 0, 0, 0.01);
}

.port-label {
    font-family: var(--code-font-family);
    font-style: italic;
}

.node-type-header {
    font-family: var(--code-font-family);
    font-weight: bold;
    font-size: var(--font-size-5);
    padding-top: 0.25rem;
    margin-top: 0;
    text-align: center;
}

.target {
    color: var(--type-color);
    border-color: var(--type-color);
}

.source {
    background: var(--type-color);
}

.rope-path {
    fill: none;
    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.2));
    stroke: var(--type-color);

    &.selected {
        filter: drop-shadow(0px 0px 7px var(--type-color));
    }
}

.start-marker,
.end-marker {
    fill: var(--type-color);

    &.selected {
        filter: drop-shadow(0px 0px 7px var(--type-color));
    }
}

.dark,
.dark-theme {
    .react-flow__minimap-node {
        --card-background-color-weight: 40%;
    }
}

.react-flow__minimap-node {
    color: var(--category-color);
    --card-background-color-weight: 65%;
    fill: color-mix(in srgb,
            currentColor,
            var(--gray-contrast) var(--card-background-color-weight));
    stroke: currentColor;
    stroke-width: 2px;
}

.Any {
    --type-color: var(--any-color);
}

.AnyField {
    --type-color: var(--field-color);
}

.AnyProceduralField {
    --type-color: var(--field-color);
}

.AnyProceduralFieldWithDimensionality {
    --type-color: var(--field-color);
}

.Field {
    --type-color: var(--field-color);
}

.AnyTexture {
    --type-color: var(--field-color);
}

.Texture {
    --type-color: var(--field-color);
}

.ProceduralField {
    --type-color: var(--field-color);
}

.AnyNumber {
    --type-color: var(--number-color);
}

.AnyFloat {
    --type-color: var(--float-color);
}

.Float {
    --type-color: var(--float-color);
}

.Int {
    --type-color: var(--int-color);
}

.Bool {
    --type-color: var(--bool-color);
}

.SlabMaterial {
    --type-color: var(--material-color);
}

.AnyMaterial {
    --type-color: var(--material-color);
}

.Material {
    --type-color: var(--material-color);
}

.AnyVectorOrScalar {
    --type-color: var(--material-color);
}

.glow {
    box-shadow: 0px 0px 7px currentColor;
}

.node-type-heading {
    color: color-mix(in srgb, var(--category-color), var(--gray-12) 30%);
}

.dark,
.dark-theme {
    .node-type-heading {
        color: var(--category-color);
    }
}

.node-type-heading {
    padding-top: var(--space-2);
    font-family: var(--code-font-family);
}

.node-contents {
    position: absolute;
    top: 0;
    left: 0;
    transform-origin: 0% 0%;
    padding: 0;
    --card-background-color-weight: 90%;
    display: block;

    .dark {
        --card-background-color-weight: 30%;
    }

    background-color: color-mix(in srgb,
        currentColor,
        var(--card-background-color) var(--card-background-color-weight));

    color: var(--category-color);

    &.selected {
        box-shadow: 0px 0px 7px currentColor;
    }
}

.react-flow__nodesselection-rect,
.react-flow__nodesselection {
    visibility: hidden;
    pointer-events: none;
}

.react-flow__edge-path {
    visibility: hidden;
}

.node-contents::after {
    box-shadow: 0 0 2px currentColor;
}

.connection {
    z-index: 10000;
}

.react-flow__connectionline {
    z-index: 10000;
}

.category-output {
    --category-color: var(--output-color);
    --category-contrast: var(--output-color-contrast);
}

.category-utility {
    --category-color: var(--utility-color);
    --category-contrast: var(--utility-color-contrast);
}

.category-math {
    --category-color: var(--math-color);
    --category-contrast: var(--math-color-contrast);
}

.category-material-category {
    --category-color: var(--material-category-color);
    --category-contrast: var(--material-category-color-contrast);
}

.category-logic {
    --category-color: var(--logic-color);
    --category-contrast: var(--logic-color-contrast);
}

.category-builtins {
    --category-color: var(--builtins-color);
    --category-contrast: var(--builtins-color-contrast);
}

.node-menu__category-label {
    color: var(--category-color);
}

.preview-node-menu-item {
    color: var(--category-color);

    &:hover,
    &:focus,
    &[data-state="instant-open"],
    &[data-state="open"] {
        background: var(--category-color);
        color: var(--category-contrast);
    }
}

.favourites-node-menu-item {
    color: var(--yellow-11);

    &:hover,
    &:focus,
    &[data-state="instant-open"],
    &[data-state="open"] {
        background: var(--yellow-9);
        color: var(--yellow-contrast);
    }
}

.AnyTexture {
    --type-color: var(--field-color);
}

.Texture {
    --type-color: var(--field-color);
}

.ProceduralField {
    --type-color: var(--field-color);
}

.AnyNumber {
    --type-color: var(--number-color);
}

.AnyFloat {
    --type-color: var(--float-color);
}

.Float {
    --type-color: var(--float-color);
}

.Int {
    --type-color: var(--int-color);
}

.Bool {
    --type-color: var(--bool-color);
}

.SlabMaterial {
    --type-color: var(--material-color);
}

.Material {
    --type-color: var(--material-color);
}

.application-menu-box {
    position: absolute;
    top: 0;
    left: 0;
    margin: 1em;
    z-index: 100;

}

.application-menu-trigger {
    width: 4em;
    height: 4em;
    box-shadow: var(--shadow-4);

    .logo-button {
        width: 2rem;
        height: 2rem;
        margin: "0 auto";
    }
}

.action-menu-item {
    margin-left: var(--space-1);
    margin-right: var(--space-1);
    padding: var(--space-1);
    padding-left: var(--space-2);
    padding-right: var(--space-2);
    user-select: none;

    .action-menu-title {
        text-transform: capitalize;
    }

    &[data-highlighted="true"] {
        background-color: var(--accent-9);
        color: var(--accent-contrast);
        border-radius: var(--radius-2);

        .action-menu-description,
        .action-menu-shortcut {
            color: var(--accent-contrast);
        }
    }
}

.action-menu-list {
    padding: 0;
    margin-top: 0;
}

.action-menu-list-container {
    margin: 0;
    margin-bottom: 0;
    max-height: min(550px, 75dvh);
}

.action-menu {
    width: min(400px, 75dvw);
    overflow: hidden;
    padding-left: 0;
    padding-right: 0;
    padding-top: var(--space-2);
    overflow: visible;
    padding-bottom: 0;
}

.action-menu-search {
    background-color: var(--color-background);
    margin-left: var(--space-2);
    margin-right: var(--space-2);
    margin-bottom: var(--space-2);
    box-shadow: var(--shadow-3);
}

.action-menu-callout {
    margin: var(--space-2);
}

.rt-DialogOverlay:has(.action-menu-search) {
    &::before {
        background: transparent !important;
    }
}

.breadcrumb {
    .file-name-editable:focus-within {
        border: 0;
        outline: none;
        text-decoration: underline;
    }

    .breadcrumb-item {
        color: var(--gray-10);
        font-family: var(--brand-font-family);
        user-select: none;

        &.file-name-breadcrumb {
            cursor: text !important;
        }

        &.file-name-breadcrumb:hover,
        &.file-name-breadcrumb:focus-within,
        &.file-name-breadcrumb:focus {
            color: var(--accent-11);
        }

        &.file-name-breadcrumb {
            outline: none;
        }
    }
}

.junction-separator {
    background-color: var(--category-color);
}

@keyframes background-scroll {
    from {
        background-position-x: 0%;
    }

    to {
        background-position-x: 200%;
    }
}

.junction::before {
    background-image: url("/web/junction-background.svg");
    background-size: 65%;
    animation-name: background-scroll;
    animation-iteration-count: infinite;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-play-state: running;
    transition-property: animation;
    transition-timing-function: cubic-bezier(0.6, -0.28, 0.735, 0.045);
    transition-duration: 1s;
}

.junction[data-connected="false"]::before {
    animation-play-state: paused;
}

.dark,
.dark-theme {
    .junction::before {
        background-image: url("/web/junction-background-dark.svg");
    }
}

@media (prefers-reduced-motion) {
    .junction::before {
        animation: none;
    }
}

.react-flow__node-output {
    width: unset;
    height: unset;
    padding: unset;
    border-radius: unset;
    font-size: unset;
    color: unset;
    text-align: unset;
}

.react-flow__viewport {

    &:active,
    &:focus-within,
    &:focus-visible {
        outline: none;
        border: none;
    }
}

.react-flow__viewport-portal {
    z-index: -100;
}

.react-flow__pane.draggable {
    cursor: unset;

    &:active {
        cursor: grabbing;
    }
}

.node-group {
    &[data-selected="true"] {
        filter: drop-shadow(0px 0px 7px currentColor);
    }
}

.GraphToolbarPanel {

    & a,
    & button {
        background-color: transparent;
        border: none;
    }

    background: transparent;
    padding: 1em;
    width: max-content;
    height: max-content;
    box-shadow: none;
}

.ToolbarRoot {
    padding: var(--space-1);
    min-width: max-content;
    border-radius: var(--radius-5);
    background-color: var(--color-panel-solid);
    display: flex;
    box-shadow: var(--shadow-3);
    justify-content: space-between;
}

.ToolbarToggleItem,
.ToolbarLink,
.ToolbarButton {
    cursor: pointer;
    position: relative;
    flex: 0 0 auto;
    padding: var(--space-2);
    border-radius: var(--radius-5);
    display: inline-flex;
    font-size: 2em;
    line-height: 1;
    align-items: center;
    justify-content: center;
}

.ToolbarToggleItem:hover,
.ToolbarLink:hover,
.ToolbarButton:hover {
    color: var(--accent-11);
}

.ToolbarToggleItem {
    margin-left: var(--space-1);
}

@keyframes slide-elastic {
    from {
        border-radius: var(--radius-5);
        height: 2em;
        width: 2em;
    }

    50% {
        border-radius: 100%;
        top: 2rem;
        height: 0.75rem;
        width: 1.5rem;
    }

    to {
        height: 2em;
        width: 2em;
        border-radius: var(--radius-5);
    }
}

.ToolbarToggleItem:first-child {
    margin-left: 0;
}

.ToolbarToggleGroup {
    &::before {
        content: " ";
        pointer-events: none;
        position: absolute;
        background-color: var(--accent-9);
        left: calc((1rem + var(--space-1)) + (var(--toggle-index) * (2rem + var(--space-1) + 2 * var(--space-2))));
        transition-property: left;
        transition-duration: 100ms;
        transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
        top: calc(1rem + var(--space-1));
        border-radius: var(--radius-5);
        padding: var(--space-2);
        width: 2rem;
        height: 2rem;
    }

    &.animating::before {
        animation-name: slide-elastic;
        animation-duration: 200ms;
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
}

.ToolbarSeparator {
    width: 2px;
    background-color: var(--gray-6);
    margin: 0 10px;
}

.ToolbarLink {
    color: var(--lime-11);
    display: none;
    justify-content: center;
    align-items: center;
}

.ToolbarLink:hover {
    background-color: transparent;
}

.ToolbarButton {
    padding-left: var(--space-3);
    padding-right: var(--space-3);

    &:active,
    &:focus-within,
    &:focus-visible {
        outline: none;
        border: none;
    }
}

@keyframes wbbl-in {
    0% {
        height: 0.5em;
        width: 0.64em;
        border-radius: 20px;
        rotate: 30deg;
    }

    70% {
        height: 1em;
        width: 1em;
        border-radius: var(--radius-5);
        opacity: 1;
        rotate: 0deg;
    }

    80% {
        height: 1em;
        width: 1em;
        border-radius: var(--radius-5);
        opacity: 1;
        rotate: 0deg;
    }

    100% {
        border-radius: 20px;
        opacity: 0;
        rotate: -35deg;
        height: 0.3em;
        width: 0.3em;
    }
}

.ToolbarButton[data-clicked="true"] {
    >* {
        color: var(--accent-contrast);
        z-index: 10;
    }

    &::before {
        content: " ";
        position: fixed;
        width: 0;
        padding: var(--space-1);
        height: 0;
        background-color: var(--accent-9);
        animation-name: wbbl-in;
        animation-duration: 200ms;
        animation-timing-function: ease-in-out;
    }
}

.ToolbarToggleItem {

    &:active,
    &:focus-within,
    &:focus-visible {
        outline: none;
        border: none;
    }
}

.ToolbarToggleItem[aria-checked="true"] {
    color: var(--accent-contrast);
}


.project-list-row {
    &:hover {
        background-color: var(--accent-1);
        cursor: pointer;
        color: var(--accent-9);
    }
}